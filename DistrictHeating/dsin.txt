#1
char Aclass(3,24)
Adymosim
1.4
Modelica experiment file


#    Experiment parameters
double experiment(7,1)
       0                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
 4.0000000000000000E+005   # StopTime     Time at which integration stops
       3                   # Increment    Communication step size, if > 0
       0                   # nInterval    Number of communication intervals, if > 0
 1.0000000000000000E-004   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       8                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
 2.0000000000000000E-014   # teps     Bound to check, if 2 equal time instants
 1.0000000000000000E-010   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
 9.9999999999999995E-007   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(247,44)
TInUp.nout
TInUp.y[1]
TInUp.tableOnFile
TInUp.verboseRead
TInUp.columns[1]
TInUp.smoothness
TInUp.extrapolation
TInUp.offset[1]
TInUp.startTime
TInUp.t_min
TInUp.t_max
TInUp.p_offset[1]
TInUp.tableID.id
TInUp.nextTimeEvent
TInUp.tableOnFileRead
QIn.nout
QIn.y[1]
QIn.tableOnFile
QIn.verboseRead
QIn.columns[1]
QIn.smoothness
QIn.extrapolation
QIn.offset[1]
QIn.startTime
QIn.t_min
QIn.t_max
QIn.p_offset[1]
QIn.tableID.id
QIn.nextTimeEvent
QIn.tableOnFileRead
TInDown.nout
TInDown.y[1]
TInDown.tableOnFile
TInDown.verboseRead
TInDown.columns[1]
TInDown.smoothness
TInDown.extrapolation
TInDown.offset[1]
TInDown.startTime
TInDown.t_min
TInDown.t_max
TInDown.p_offset[1]
TInDown.tableID.id
TInDown.nextTimeEvent
TInDown.tableOnFileRead
TOut.nout
TOut.y[1]
TOut.tableOnFile
TOut.verboseRead
TOut.columns[1]
TOut.smoothness
TOut.extrapolation
TOut.offset[1]
TOut.startTime
TOut.t_min
TOut.t_max
TOut.p_offset[1]
TOut.tableID.id
TOut.nextTimeEvent
TOut.tableOnFileRead
tabs3InpSym4T.cMid
tabs3InpSym4T.cAmb
tabs3InpSym4T.c
tabs3InpSym4T.cIn
tabs3InpSym4T.r1
tabs3InpSym4T.rLong
tabs3InpSym4T.r2
tabs3InpSym4T.TUp0
tabs3InpSym4T.TDown0
tabs3InpSym4T.TIn0
tabs3InpSym4T.TMid0
tabs3InpSym4T.TRef
tabs3InpSym4T.TMax
tabs3InpSym4T.varE
tabs3InpSym4T.resUp1.heaPor_a.Q_flow
tabs3InpSym4T.resUp1.r
tabs3InpSym4T.resDown1.heaPor_a.Q_flow
tabs3InpSym4T.resDown1.r
tabs3InpSym4T.preQIn.T_ref
tabs3InpSym4T.preQIn.alpha
tabs3InpSym4T.preQIn.port.Q_flow
tabs3InpSym4T.senTMid.port.Q_flow
tabs3InpSym4T.capMid.c
tabs3InpSym4T.capMid.TSta
tabs3InpSym4T.capMid.heaPor.T
tabs3InpSym4T.capMid.heaPor.der(T)
tabs3InpSym4T.capMid.heaPor.Q_flow
tabs3InpSym4T.TUp.port.Q_flow
tabs3InpSym4T.TDown.port.Q_flow
tabs3InpSym4T.resUp2.r
tabs3InpSym4T.resDown2.r
tabs3InpSym4T.capDown.c
tabs3InpSym4T.capDown.TSta
tabs3InpSym4T.capDown.heaPor.T
tabs3InpSym4T.capDown.heaPor.der(T)
tabs3InpSym4T.capDown.heaPor.Q_flow
tabs3InpSym4T.capUp.c
tabs3InpSym4T.capUp.TSta
tabs3InpSym4T.capUp.heaPor.T
tabs3InpSym4T.capUp.heaPor.der(T)
tabs3InpSym4T.capUp.heaPor.Q_flow
tabs3InpSym4T.capIn.c
tabs3InpSym4T.capIn.TSta
tabs3InpSym4T.capIn.heaPor.T
tabs3InpSym4T.capIn.heaPor.der(T)
tabs3InpSym4T.capIn.heaPor.Q_flow
tabs3InpSym4T.resLong.heaPor_a.Q_flow
tabs3InpSym4T.resLong.r
tabs3InpSym4T.senTMUp.port.Q_flow
tabs3InpSym4T.senTMDown.port.Q_flow
tabs3InpSym4T.senTIn.port.Q_flow
tabs3InpSym4T.EMUp.c
tabs3InpSym4T.EMUp.tRef
tabs3InpSym4T.EMUp.tMax
tabs3InpSym4T.EMUp.product.u2
tabs3InpSym4T.EMUp.TDiff.y
tabs3InpSym4T.EMUp.TDiff.k1
tabs3InpSym4T.EMUp.TDiff.k2
tabs3InpSym4T.EMUp.EMax
tabs3InpSym4T.EMUp.TDiffMax.k1
tabs3InpSym4T.EMUp.TDiffMax.k2
tabs3InpSym4T.EMUp.EOut
tabs3InpSym4T.EMMid.c
tabs3InpSym4T.EMMid.tRef
tabs3InpSym4T.EMMid.tMax
tabs3InpSym4T.EMMid.product.u2
tabs3InpSym4T.EMMid.TDiff.y
tabs3InpSym4T.EMMid.TDiff.k1
tabs3InpSym4T.EMMid.TDiff.k2
tabs3InpSym4T.EMMid.EMax
tabs3InpSym4T.EMMid.TDiffMax.k1
tabs3InpSym4T.EMMid.TDiffMax.k2
tabs3InpSym4T.EMMid.EOut
tabs3InpSym4T.EMDown.c
tabs3InpSym4T.EMDown.tRef
tabs3InpSym4T.EMDown.tMax
tabs3InpSym4T.EMDown.product.u2
tabs3InpSym4T.EMDown.TDiff.y
tabs3InpSym4T.EMDown.TDiff.k1
tabs3InpSym4T.EMDown.TDiff.k2
tabs3InpSym4T.EMDown.EMax
tabs3InpSym4T.EMDown.TDiffMax.k1
tabs3InpSym4T.EMDown.TDiffMax.k2
tabs3InpSym4T.EMDown.EOut
tabs3InpSym4T.EMIn.c
tabs3InpSym4T.EMIn.tRef
tabs3InpSym4T.EMIn.tMax
tabs3InpSym4T.EMIn.product.u2
tabs3InpSym4T.EMIn.TDiff.y
tabs3InpSym4T.EMIn.TDiff.k1
tabs3InpSym4T.EMIn.TDiff.k2
tabs3InpSym4T.EMIn.EMax
tabs3InpSym4T.EMIn.TDiffMax.k1
tabs3InpSym4T.EMIn.TDiffMax.k2
tabs3InpSym4T.EMIn.EOut
tabs3InpSym4T.soCAggregator.n
tabs3InpSym4T.soCAggregator.TotalEnergy.nin
tabs3InpSym4T.soCAggregator.TotalEnergy.k[1]
tabs3InpSym4T.soCAggregator.TotalEnergy.k[2]
tabs3InpSym4T.soCAggregator.TotalEnergy.k[3]
tabs3InpSym4T.soCAggregator.TotalEnergy.k[4]
tabs3InpSym4T.soCAggregator.TotalEnergy.k[5]
tabs3InpSym4T.soCAggregator.MaxEnergy.nin
tabs3InpSym4T.soCAggregator.MaxEnergy.y
tabs3InpSym4T.soCAggregator.MaxEnergy.k[1]
tabs3InpSym4T.soCAggregator.MaxEnergy.k[2]
tabs3InpSym4T.soCAggregator.MaxEnergy.k[3]
tabs3InpSym4T.soCAggregator.MaxEnergy.k[4]
tabs3InpSym4T.soCAggregator.MaxEnergy.k[5]
tabs3InpSym4T.soCAggregator.EMaxIn[5]
tabs3InpSym4T.soCAggregator.EIn[5]
tabs3InpSym4T.soCAggregator.EOut
tabs3InpSym4T.OuputSoC
tabs3InpSym4T.senE.use_numberPort
tabs3InpSym4T.senE.number
tabs3InpSym4T.senE.significantDigits
tabs3InpSym4T.senSoC.use_numberPort
tabs3InpSym4T.senSoC.number
tabs3InpSym4T.senSoC.significantDigits
tabs3InpSym4T.TAmb
tabs3InpSym4T.energyMeter.c
tabs3InpSym4T.energyMeter.tRef
tabs3InpSym4T.energyMeter.tMax
tabs3InpSym4T.energyMeter.product.u2
tabs3InpSym4T.energyMeter.TDiff.y
tabs3InpSym4T.energyMeter.TDiff.k1
tabs3InpSym4T.energyMeter.TDiff.k2
tabs3InpSym4T.energyMeter.TDiffMax.k1
tabs3InpSym4T.energyMeter.TDiffMax.k2
Energy.nout
Energy.y[1]
Energy.tableOnFile
Energy.verboseRead
Energy.columns[1]
Energy.smoothness
Energy.extrapolation
Energy.offset[1]
Energy.startTime
Energy.t_min
Energy.t_max
Energy.p_offset[1]
Energy.tableID.id
Energy.nextTimeEvent
Energy.tableOnFileRead
TAmb.nout
TAmb.tableOnFile
TAmb.table[1, 1]
TAmb.table[1, 2]
TAmb.table[2, 1]
TAmb.table[2, 2]
TAmb.table[3, 1]
TAmb.table[3, 2]
TAmb.table[4, 1]
TAmb.table[4, 2]
TAmb.table[5, 1]
TAmb.table[5, 2]
TAmb.table[6, 1]
TAmb.table[6, 2]
TAmb.table[7, 1]
TAmb.table[7, 2]
TAmb.verboseRead
TAmb.columns[1]
TAmb.smoothness
TAmb.extrapolation
TAmb.offset[1]
TAmb.startTime
TAmb.t_min
TAmb.t_max
TAmb.p_offset[1]
TAmb.tableID.id
TAmb.nextTimeEvent
TAmb.tableOnFileRead
SOC.nout
SOC.y[1]
SOC.tableOnFile
SOC.verboseRead
SOC.columns[1]
SOC.smoothness
SOC.extrapolation
SOC.offset[1]
SOC.startTime
SOC.t_min
SOC.t_max
SOC.p_offset[1]
SOC.tableID.id
SOC.nextTimeEvent
SOC.tableOnFileRead

double initialValue(247,6)
  0       1                  1 1.0000000000000000E+100  6   258   # TInUp.nout
  0 2.8814999999999998E+002  0 1.0000000000000000E+100  6   256   # TInUp.y[1]
  0       1                  0       0                  6   257   # TInUp.tableOnFile
 -1       1                  0       0                  1   281   # TInUp.verboseRead
  0       2                  0       0                  6   258   # TInUp.columns[1]
  0       2                  1       3                  6   258   # TInUp.smoothness
 -1       2                  1       4                  1   282   # TInUp.extrapolation
 -1       0                  0       0                  1   280   # TInUp.offset[1]
 -1       0                  0       0                  1   280   # TInUp.startTime
  0       0                  0       0                  6   256   # TInUp.t_min
  0       0                  0       0                  6   256   # TInUp.t_max
  0       0                  0       0                  6  1280   # TInUp.p_offset[1]
  0       0                  0       0                  6  1282   # TInUp.tableID.id
  0       0                  0       0                  6  1352   # TInUp.nextTimeEvent
  0       0                  0       0                  6  1280   # TInUp.tableOnFileRead
  0       1                  1 1.0000000000000000E+100  6   258   # QIn.nout
  0       0                  0       0                  6   256   # QIn.y[1]
  0       1                  0       0                  6   257   # QIn.tableOnFile
 -1       1                  0       0                  1   281   # QIn.verboseRead
  0       2                  0       0                  6   258   # QIn.columns[1]
  0       2                  1       3                  6   258   # QIn.smoothness
 -1       2                  1       4                  1   282   # QIn.extrapolation
 -1       0                  0       0                  1   280   # QIn.offset[1]
 -1       0                  0       0                  1   280   # QIn.startTime
  0       0                  0       0                  6   256   # QIn.t_min
  0       0                  0       0                  6   256   # QIn.t_max
  0       0                  0       0                  6  1280   # QIn.p_offset[1]
  0       0                  0       0                  6  1282   # QIn.tableID.id
  0       0                  0       0                  6  1352   # QIn.nextTimeEvent
  0       0                  0       0                  6  1280   # QIn.tableOnFileRead
  0       1                  1 1.0000000000000000E+100  6   258   # TInDown.nout
  0 2.8814999999999998E+002  0 1.0000000000000000E+100  6   256   # TInDown.y[1]
  0       1                  0       0                  6   257   # TInDown.tableOnFile
 -1       1                  0       0                  1   281   # TInDown.verboseRead
  0       2                  0       0                  6   258   # TInDown.columns[1]
  0       2                  1       3                  6   258   # TInDown.smoothness
 -1       2                  1       4                  1   282   # TInDown.extrapolation
 -1 -2.7314999999999998E+002  0       0                  1   280   # TInDown.offset[1]
 -1       0                  0       0                  1   280   # TInDown.startTime
  0       0                  0       0                  6   256   # TInDown.t_min
  0       0                  0       0                  6   256   # TInDown.t_max
  0       0                  0       0                  6  1280   # TInDown.p_offset[1]
  0       0                  0       0                  6  1282   # TInDown.tableID.id
  0       0                  0       0                  6  1352   # TInDown.nextTimeEvent
  0       0                  0       0                  6  1280   # TInDown.tableOnFileRead
  0       1                  1 1.0000000000000000E+100  6   258   # TOut.nout
  0       0                  0       0                  6   256   # TOut.y[1]
  0       1                  0       0                  6   257   # TOut.tableOnFile
 -1       1                  0       0                  1   281   # TOut.verboseRead
  0       2                  0       0                  6   258   # TOut.columns[1]
  0       2                  1       3                  6   258   # TOut.smoothness
 -1       2                  1       4                  1   282   # TOut.extrapolation
 -1       0                  0       0                  1   280   # TOut.offset[1]
 -1       0                  0       0                  1   280   # TOut.startTime
  0       0                  0       0                  6   256   # TOut.t_min
  0       0                  0       0                  6   256   # TOut.t_max
  0       0                  0       0                  6  1280   # TOut.p_offset[1]
  0       0                  0       0                  6  1282   # TOut.tableID.id
  0       0                  0       0                  6  1352   # TOut.nextTimeEvent
  0       0                  0       0                  6  1280   # TOut.tableOnFileRead
 -1    1594                  0       0                  1   280   # tabs3InpSym4T.cMid
 -1 2.4375000000000000E+002  0       0                  1   280   # tabs3InpSym4T.cAmb
 -1 1.4830000000000001E+002  0       0                  1   280   # tabs3InpSym4T.c
 -1 1.8250000000000000E+002  0       0                  1   280   # tabs3InpSym4T.cIn
 -1 2.7599999999999998E+000  0       0                  1   280   # tabs3InpSym4T.r1
 -1 3.4640000000000000E+000  0       0                  1   280   # tabs3InpSym4T.rLong
 -1 5.5229999999999997E+000  0       0                  1   280   # tabs3InpSym4T.r2
 -1 2.8814999999999998E+002  0 1.0000000000000000E+100  1   280   # tabs3InpSym4T.TUp0
 -1 2.8814999999999998E+002  0 1.0000000000000000E+100  1   280   # tabs3InpSym4T.TDown0
 -1 2.8814999999999998E+002  0 1.0000000000000000E+100  1   280   # tabs3InpSym4T.TIn0
 -1 2.8814999999999998E+002  0 1.0000000000000000E+100  1   280   # tabs3InpSym4T.TMid0
 -1 2.8814999999999998E+002  0 1.0000000000000000E+100  1   280   # tabs3InpSym4T.TRef
 -1 2.9814999999999998E+002  0 1.0000000000000000E+100  1   280   # tabs3InpSym4T.TMax
 -1 1.1899999999999999E+000  0       0                  1   280   # tabs3InpSym4T.varE
  0       0                  0       0                  6   388   # tabs3InpSym4T.resUp1.heaPor_a.Q_flow
  0       0                  0       0                  6   256   # tabs3InpSym4T.resUp1.r
  0       0                  0       0                  6   388   # tabs3InpSym4T.resDown1.heaPor_a.Q_flow
  0       0                  0       0                  6   256   # tabs3InpSym4T.resDown1.r
 -1 2.9314999999999998E+002  0 1.0000000000000000E+100  1   280   # tabs3InpSym4T.preQIn.T_ref
 -1       0                  0       0                  1   280   # tabs3InpSym4T.preQIn.alpha
  0       0                  0       0                  6   388   # tabs3InpSym4T.preQIn.port.Q_flow
  0       0                  0       0                  6   388   # tabs3InpSym4T.senTMid.port.Q_flow
  0       0                  0       0                  6   256   # tabs3InpSym4T.capMid.c
  0 2.8814999999999998E+002  0 1.0000000000000000E+100  6   256   # tabs3InpSym4T.capMid.TSta
 -1       0                  0 1.0000000000000000E+100  2   276   # tabs3InpSym4T.capMid.heaPor.T
  0       0                  0       0                  3   260   # tabs3InpSym4T.capMid.heaPor.der(T)
  0       0                  0       0                  6   388   # tabs3InpSym4T.capMid.heaPor.Q_flow
  0       0                  0       0                  6   388   # tabs3InpSym4T.TUp.port.Q_flow
  0       0                  0       0                  6   388   # tabs3InpSym4T.TDown.port.Q_flow
  0       0                  0       0                  6   256   # tabs3InpSym4T.resUp2.r
  0       0                  0       0                  6   256   # tabs3InpSym4T.resDown2.r
  0       0                  0       0                  6   256   # tabs3InpSym4T.capDown.c
  0 2.8814999999999998E+002  0 1.0000000000000000E+100  6   256   # tabs3InpSym4T.capDown.TSta
 -1       0                  0 1.0000000000000000E+100  2   276   # tabs3InpSym4T.capDown.heaPor.T
  0       0                  0       0                  3   260   # tabs3InpSym4T.capDown.heaPor.der(T)
  0       0                  0       0                  6   388   # tabs3InpSym4T.capDown.heaPor.Q_flow
  0       0                  0       0                  6   256   # tabs3InpSym4T.capUp.c
  0 2.8814999999999998E+002  0 1.0000000000000000E+100  6   256   # tabs3InpSym4T.capUp.TSta
 -1       0                  0 1.0000000000000000E+100  2   276   # tabs3InpSym4T.capUp.heaPor.T
  0       0                  0       0                  3   260   # tabs3InpSym4T.capUp.heaPor.der(T)
  0       0                  0       0                  6   388   # tabs3InpSym4T.capUp.heaPor.Q_flow
  0       0                  0       0                  6   256   # tabs3InpSym4T.capIn.c
  0 2.8814999999999998E+002  0 1.0000000000000000E+100  6   256   # tabs3InpSym4T.capIn.TSta
 -1       0                  0 1.0000000000000000E+100  2   276   # tabs3InpSym4T.capIn.heaPor.T
  0       0                  0       0                  3   260   # tabs3InpSym4T.capIn.heaPor.der(T)
  0       0                  0       0                  6   388   # tabs3InpSym4T.capIn.heaPor.Q_flow
  0       0                  0       0                  6   388   # tabs3InpSym4T.resLong.heaPor_a.Q_flow
  0       0                  0       0                  6   256   # tabs3InpSym4T.resLong.r
  0       0                  0       0                  6   388   # tabs3InpSym4T.senTMUp.port.Q_flow
  0       0                  0       0                  6   388   # tabs3InpSym4T.senTMDown.port.Q_flow
  0       0                  0       0                  6   388   # tabs3InpSym4T.senTIn.port.Q_flow
  0       0                  0       0                  6   256   # tabs3InpSym4T.EMUp.c
  0 2.8814999999999998E+002  0 1.0000000000000000E+100  6   256   # tabs3InpSym4T.EMUp.tRef
  0 2.8814999999999998E+002  0 1.0000000000000000E+100  6   256   # tabs3InpSym4T.EMUp.tMax
  0       0                  0       0                  6   256   # tabs3InpSym4T.EMUp.product.u2
  0       0                  0       0                  6   256   # tabs3InpSym4T.EMUp.TDiff.y
 -1      -1                  0       0                  1   280   # tabs3InpSym4T.EMUp.TDiff.k1
 -1       1                  0       0                  1   280   # tabs3InpSym4T.EMUp.TDiff.k2
  0       0                  0       0                  6   256   # tabs3InpSym4T.EMUp.EMax
 -1      -1                  0       0                  1   280   # tabs3InpSym4T.EMUp.TDiffMax.k1
 -1       1                  0       0                  1   280   # tabs3InpSym4T.EMUp.TDiffMax.k2
  0       0                  0       0                  6   256   # tabs3InpSym4T.EMUp.EOut
  0       0                  0       0                  6   256   # tabs3InpSym4T.EMMid.c
  0 2.8814999999999998E+002  0 1.0000000000000000E+100  6   256   # tabs3InpSym4T.EMMid.tRef
  0 2.8814999999999998E+002  0 1.0000000000000000E+100  6   256   # tabs3InpSym4T.EMMid.tMax
  0       0                  0       0                  6   256   # tabs3InpSym4T.EMMid.product.u2
  0       0                  0       0                  6   256   # tabs3InpSym4T.EMMid.TDiff.y
 -1      -1                  0       0                  1   280   # tabs3InpSym4T.EMMid.TDiff.k1
 -1       1                  0       0                  1   280   # tabs3InpSym4T.EMMid.TDiff.k2
  0       0                  0       0                  6   256   # tabs3InpSym4T.EMMid.EMax
 -1      -1                  0       0                  1   280   # tabs3InpSym4T.EMMid.TDiffMax.k1
 -1       1                  0       0                  1   280   # tabs3InpSym4T.EMMid.TDiffMax.k2
  0       0                  0       0                  6   256   # tabs3InpSym4T.EMMid.EOut
  0       0                  0       0                  6   256   # tabs3InpSym4T.EMDown.c
  0 2.8814999999999998E+002  0 1.0000000000000000E+100  6   256   # tabs3InpSym4T.EMDown.tRef
  0 2.8814999999999998E+002  0 1.0000000000000000E+100  6   256   # tabs3InpSym4T.EMDown.tMax
  0       0                  0       0                  6   256   # tabs3InpSym4T.EMDown.product.u2
  0       0                  0       0                  6   256   # tabs3InpSym4T.EMDown.TDiff.y
 -1      -1                  0       0                  1   280   # tabs3InpSym4T.EMDown.TDiff.k1
 -1       1                  0       0                  1   280   # tabs3InpSym4T.EMDown.TDiff.k2
  0       0                  0       0                  6   256   # tabs3InpSym4T.EMDown.EMax
 -1      -1                  0       0                  1   280   # tabs3InpSym4T.EMDown.TDiffMax.k1
 -1       1                  0       0                  1   280   # tabs3InpSym4T.EMDown.TDiffMax.k2
  0       0                  0       0                  6   256   # tabs3InpSym4T.EMDown.EOut
  0       0                  0       0                  6   256   # tabs3InpSym4T.EMIn.c
  0 2.8814999999999998E+002  0 1.0000000000000000E+100  6   256   # tabs3InpSym4T.EMIn.tRef
  0 2.8814999999999998E+002  0 1.0000000000000000E+100  6   256   # tabs3InpSym4T.EMIn.tMax
  0       0                  0       0                  6   256   # tabs3InpSym4T.EMIn.product.u2
  0       0                  0       0                  6   256   # tabs3InpSym4T.EMIn.TDiff.y
 -1      -1                  0       0                  1   280   # tabs3InpSym4T.EMIn.TDiff.k1
 -1       1                  0       0                  1   280   # tabs3InpSym4T.EMIn.TDiff.k2
  0       0                  0       0                  6   256   # tabs3InpSym4T.EMIn.EMax
 -1      -1                  0       0                  1   280   # tabs3InpSym4T.EMIn.TDiffMax.k1
 -1       1                  0       0                  1   280   # tabs3InpSym4T.EMIn.TDiffMax.k2
  0       0                  0       0                  6   256   # tabs3InpSym4T.EMIn.EOut
  0       5                  0       0                  6   258   # tabs3InpSym4T.soCAggregator.n
  0       5                  0       0                  6   258   # tabs3InpSym4T.soCAggregator.TotalEnergy.nin
 -1       1                  0       0                  1   280   # tabs3InpSym4T.soCAggregator.TotalEnergy.k[1]
 -1       1                  0       0                  1   280   # tabs3InpSym4T.soCAggregator.TotalEnergy.k[2]
 -1       1                  0       0                  1   280   # tabs3InpSym4T.soCAggregator.TotalEnergy.k[3]
 -1       1                  0       0                  1   280   # tabs3InpSym4T.soCAggregator.TotalEnergy.k[4]
 -1       1                  0       0                  1   280   # tabs3InpSym4T.soCAggregator.TotalEnergy.k[5]
  0       5                  0       0                  6   258   # tabs3InpSym4T.soCAggregator.MaxEnergy.nin
  0       0                  0       0                  6   256   # tabs3InpSym4T.soCAggregator.MaxEnergy.y
 -1       1                  0       0                  1   280   # tabs3InpSym4T.soCAggregator.MaxEnergy.k[1]
 -1       1                  0       0                  1   280   # tabs3InpSym4T.soCAggregator.MaxEnergy.k[2]
 -1       1                  0       0                  1   280   # tabs3InpSym4T.soCAggregator.MaxEnergy.k[3]
 -1       1                  0       0                  1   280   # tabs3InpSym4T.soCAggregator.MaxEnergy.k[4]
 -1       1                  0       0                  1   280   # tabs3InpSym4T.soCAggregator.MaxEnergy.k[5]
  0       0                  0       0                  6   256   # tabs3InpSym4T.soCAggregator.EMaxIn[5]
  0       0                  0       0                  6   256   # tabs3InpSym4T.soCAggregator.EIn[5]
  0       0                  0       0                  6   256   # tabs3InpSym4T.soCAggregator.EOut
  0       0                  0       0                  6   256   # tabs3InpSym4T.OuputSoC
  0       1                  0       0                  6   769   # tabs3InpSym4T.senE.use_numberPort
  0       0                  0       0                  6   768   # tabs3InpSym4T.senE.number
 -1       2                  1 1.0000000000000000E+100  1   282   # tabs3InpSym4T.senE.significantDigits
  0       1                  0       0                  6   769   # tabs3InpSym4T.senSoC.use_numberPort
  0       0                  0       0                  6   768   # tabs3InpSym4T.senSoC.number
 -1       2                  1 1.0000000000000000E+100  1   282   # tabs3InpSym4T.senSoC.significantDigits
  0       0                  0       0                  6   256   # tabs3InpSym4T.TAmb
  0       0                  0       0                  6   256   # tabs3InpSym4T.energyMeter.c
  0 2.8814999999999998E+002  0 1.0000000000000000E+100  6   256   # tabs3InpSym4T.energyMeter.tRef
  0 2.8814999999999998E+002  0 1.0000000000000000E+100  6   256   # tabs3InpSym4T.energyMeter.tMax
  0       0                  0       0                  6   256   # tabs3InpSym4T.energyMeter.product.u2
  0       0                  0       0                  6   256   # tabs3InpSym4T.energyMeter.TDiff.y
 -1      -1                  0       0                  1   280   # tabs3InpSym4T.energyMeter.TDiff.k1
 -1       1                  0       0                  1   280   # tabs3InpSym4T.energyMeter.TDiff.k2
 -1      -1                  0       0                  1   280   # tabs3InpSym4T.energyMeter.TDiffMax.k1
 -1       1                  0       0                  1   280   # tabs3InpSym4T.energyMeter.TDiffMax.k2
  0       1                  1 1.0000000000000000E+100  6   258   # Energy.nout
  0       0                  0       0                  6   256   # Energy.y[1]
  0       1                  0       0                  6   257   # Energy.tableOnFile
 -1       1                  0       0                  1   281   # Energy.verboseRead
  0       2                  0       0                  6   258   # Energy.columns[1]
  0       2                  1       3                  6   258   # Energy.smoothness
 -1       2                  1       4                  1   282   # Energy.extrapolation
 -1       0                  0       0                  1   280   # Energy.offset[1]
 -1       0                  0       0                  1   280   # Energy.startTime
  0       0                  0       0                  6   256   # Energy.t_min
  0       0                  0       0                  6   256   # Energy.t_max
  0       0                  0       0                  6  1280   # Energy.p_offset[1]
  0       0                  0       0                  6  1282   # Energy.tableID.id
  0       0                  0       0                  6  1352   # Energy.nextTimeEvent
  0       0                  0       0                  6  1280   # Energy.tableOnFileRead
  0       1                  1 1.0000000000000000E+100  6   258   # TAmb.nout
  0       0                  0       0                  6   257   # TAmb.tableOnFile
 -1       0                  0       0                  1   280   # TAmb.table[1, 1]
 -1      15                  0       0                  1   280   # TAmb.table[1, 2]
 -1   50000                  0       0                  1   280   # TAmb.table[2, 1]
 -1      15                  0       0                  1   280   # TAmb.table[2, 2]
 -1  100000                  0       0                  1   280   # TAmb.table[3, 1]
 -1      15                  0       0                  1   280   # TAmb.table[3, 2]
 -1 1.6000000000000000E+005  0       0                  1   280   # TAmb.table[4, 1]
 -1      15                  0       0                  1   280   # TAmb.table[4, 2]
 -1 2.1000000000000000E+005  0       0                  1   280   # TAmb.table[5, 1]
 -1      15                  0       0                  1   280   # TAmb.table[5, 2]
 -1 2.6000000000000000E+005  0       0                  1   280   # TAmb.table[6, 1]
 -1      15                  0       0                  1   280   # TAmb.table[6, 2]
 -1 4.0000000000000000E+005  0       0                  1   280   # TAmb.table[7, 1]
 -1      15                  0       0                  1   280   # TAmb.table[7, 2]
 -1       1                  0       0                  1   281   # TAmb.verboseRead
  0       2                  0       0                  6   258   # TAmb.columns[1]
  0       1                  1       3                  6   258   # TAmb.smoothness
 -1       2                  1       4                  1   282   # TAmb.extrapolation
 -1 2.7314999999999998E+002  0       0                  1   280   # TAmb.offset[1]
 -1       0                  0       0                  1   280   # TAmb.startTime
  0       0                  0       0                  6   256   # TAmb.t_min
  0       0                  0       0                  6   256   # TAmb.t_max
  0       0                  0       0                  6  1280   # TAmb.p_offset[1]
  0       0                  0       0                  6  1282   # TAmb.tableID.id
  0       0                  0       0                  6  1352   # TAmb.nextTimeEvent
  0       0                  0       0                  6  1280   # TAmb.tableOnFileRead
  0       1                  1 1.0000000000000000E+100  6   258   # SOC.nout
  0       0                  0       0                  6   256   # SOC.y[1]
  0       1                  0       0                  6   257   # SOC.tableOnFile
 -1       1                  0       0                  1   281   # SOC.verboseRead
  0       2                  0       0                  6   258   # SOC.columns[1]
  0       1                  1       3                  6   258   # SOC.smoothness
 -1       2                  1       4                  1   282   # SOC.extrapolation
 -1       0                  0       0                  1   280   # SOC.offset[1]
 -1       0                  0       0                  1   280   # SOC.startTime
  0       0                  0       0                  6   256   # SOC.t_min
  0       0                  0       0                  6   256   # SOC.t_max
  0       0                  0       0                  6  1280   # SOC.p_offset[1]
  0       0                  0       0                  6  1282   # SOC.tableID.id
  0       0                  0       0                  6  1352   # SOC.nextTimeEvent
  0       0                  0       0                  6  1280   # SOC.tableOnFileRead


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable.
#           = 0: real.
#           = 1: boolean.
#           = 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, no special action takes place (default setting).
#
# - If there are only FIXED and FREE variables and the number of
#   FREE parameters, states and inputs is IDENTICAL to the number of
#   FIXED state derivatives, outputs and auxiliary variables, a non-linear
#   equation is solved to determine a consistent set of initial conditions.
#
# - In all other cases the following optimization problem is solved:
#      min( sum( weight(i)*( (value(i) - DESIRED(i))/scale(i) )^2 ) )
#   under the constraint that the differential equation is fulfilled
#   at the initial time. In most cases weight(i)=1 is sufficient, due
#   to the automatic scaling (if DESIRED(i) is not close to zero,
#   scale(i) = DESIRED(i). Otherwise, the scaling is based on the
#   nominal value (and maybe minimum and maximum values given in 
#   column 3 and 4). If these values are zero, scale(i)=1 is used).
#
char initialDescription(247,97)
Number of outputs [:#(type=Integer)]
Connector of Real output signals [K]
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Columns of table to be interpolated [:#(type=Integer)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
Extrapolation of data outside the definition range [:#(type=Modelica.Blocks.Types.Extrapolation)]
Offsets of output signals
Output = offset for time < startTime [s]
Minimum abscissa value defined in table [s]
Maximum abscissa value defined in table [s]
Offsets of output signals
[:#(type=Integer)]
Next time event instant [s]
= 1, if table was successfully read from file
Number of outputs [:#(type=Integer)]
Connector of Real output signals [W]
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Columns of table to be interpolated [:#(type=Integer)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
Extrapolation of data outside the definition range [:#(type=Modelica.Blocks.Types.Extrapolation)]
Offsets of output signals
Output = offset for time < startTime [s]
Minimum abscissa value defined in table [s]
Maximum abscissa value defined in table [s]
Offsets of output signals
[:#(type=Integer)]
Next time event instant [s]
= 1, if table was successfully read from file
Number of outputs [:#(type=Integer)]
Connector of Real output signals [K]
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Columns of table to be interpolated [:#(type=Integer)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
Extrapolation of data outside the definition range [:#(type=Modelica.Blocks.Types.Extrapolation)]
Offsets of output signals
Output = offset for time < startTime [s]
Minimum abscissa value defined in table [s]
Maximum abscissa value defined in table [s]
Offsets of output signals
[:#(type=Integer)]
Next time event instant [s]
= 1, if table was successfully read from file
Number of outputs [:#(type=Integer)]
Connector of Real output signals
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Columns of table to be interpolated [:#(type=Integer)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
Extrapolation of data outside the definition range [:#(type=Modelica.Blocks.Types.Extrapolation)]
Offsets of output signals
Output = offset for time < startTime [s]
Minimum abscissa value defined in table [s]
Maximum abscissa value defined in table [s]
Offsets of output signals
[:#(type=Integer)]
Next time event instant [s]
= 1, if table was successfully read from file
Thermal capacity of middle slab [J/K]
[J/K]
Thermal capacity of upper slab [J/K]
Thermal capacity of down slab [J/K]
Thermal resistance of upper half of lower slab, in K/W [K/W]
Thermal resistance of lower half of upper slab, in K/W [K/W]
Thermal resistance of upper half of uppper slab, in K/W [K/W]
Initial temperature of upper capacity in K [K|degC]
Initial temperature of lower capacity in K [K|degC]
Initial temperature of inner capacity in K [K|degC]
Initial temperature of middle capacity in K [K|degC]
Reference temperature for energy calculations [K|degC]
Maximum temperature for SoC calculations [K|degC]
[1]
Heat flow rate (positive if flowing from outside into the component) [W]
Constant thermal resistance [K/W]
Heat flow rate (positive if flowing from outside into the component) [W]
Constant thermal resistance [K/W]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat capacity of element (= cp*m) [J/K]
Initial temperature for the capacity, fixed=true [K|degC]
Port temperature [K|degC]
der(Port temperature) [K/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Constant thermal resistance [K/W]
Constant thermal resistance [K/W]
Heat capacity of element (= cp*m) [J/K]
Initial temperature for the capacity, fixed=true [K|degC]
Port temperature [K|degC]
der(Port temperature) [K/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat capacity of element (= cp*m) [J/K]
Initial temperature for the capacity, fixed=true [K|degC]
Port temperature [K|degC]
der(Port temperature) [K/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat capacity of element (= cp*m) [J/K]
Initial temperature for the capacity, fixed=true [K|degC]
Port temperature [K|degC]
der(Port temperature) [K/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Constant thermal resistance [K/W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Input capacitance for algorithm [J/K]
Reference temperature, treated as zero energy point [K|degC]
Maximal temperature of calculated state [K|degC]
Connector of Real input signal 2
Connector of Real output signal
Gain of upper input
Gain of lower input
Connector of Real output signal
Gain of upper input
Gain of lower input
Connector of Real output signal
Input capacitance for algorithm [J/K]
Reference temperature, treated as zero energy point [K|degC]
Maximal temperature of calculated state [K|degC]
Connector of Real input signal 2
Connector of Real output signal
Gain of upper input
Gain of lower input
Connector of Real output signal
Gain of upper input
Gain of lower input
Connector of Real output signal
Input capacitance for algorithm [J/K]
Reference temperature, treated as zero energy point [K|degC]
Maximal temperature of calculated state [K|degC]
Connector of Real input signal 2
Connector of Real output signal
Gain of upper input
Gain of lower input
Connector of Real output signal
Gain of upper input
Gain of lower input
Connector of Real output signal
Input capacitance for algorithm [J/K]
Reference temperature, treated as zero energy point [K|degC]
Maximal temperature of calculated state [K|degC]
Connector of Real input signal 2
Connector of Real output signal
Gain of upper input
Gain of lower input
Connector of Real output signal
Gain of upper input
Gain of lower input
Connector of Real output signal
Number of states to integrate in the SoC [:#(type=Integer)]
Number of inputs [:#(type=Integer)]
Optional: sum coefficients
Optional: sum coefficients
Optional: sum coefficients
Optional: sum coefficients
Optional: sum coefficients
Number of inputs [:#(type=Integer)]
Connector of Real output signal
Optional: sum coefficients
Optional: sum coefficients
Optional: sum coefficients
Optional: sum coefficients
Optional: sum coefficients
Maximum energy of all states
Instantaneous energy content of all states
Connector of Real output signal
Output of SoC (Real)
= true, if numberPort enabled [:#(type=Boolean)]
Number to visualize if use_numberPort=false (time varying)
Number of significant digits to be shown [:#(type=Integer)]
= true, if numberPort enabled [:#(type=Boolean)]
Number to visualize if use_numberPort=false (time varying)
Number of significant digits to be shown [:#(type=Integer)]
Connector of Real input signal 2
Input capacitance for algorithm [J/K]
Reference temperature, treated as zero energy point [K|degC]
Maximal temperature of calculated state [K|degC]
Connector of Real input signal 2
Connector of Real output signal
Gain of upper input
Gain of lower input
Gain of upper input
Gain of lower input
Number of outputs [:#(type=Integer)]
Connector of Real output signals
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Columns of table to be interpolated [:#(type=Integer)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
Extrapolation of data outside the definition range [:#(type=Modelica.Blocks.Types.Extrapolation)]
Offsets of output signals
Output = offset for time < startTime [s]
Minimum abscissa value defined in table [s]
Maximum abscissa value defined in table [s]
Offsets of output signals
[:#(type=Integer)]
Next time event instant [s]
= 1, if table was successfully read from file
Number of outputs [:#(type=Integer)]
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
Table matrix (time = first column; e.g., table=[0,2])
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Columns of table to be interpolated [:#(type=Integer)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
Extrapolation of data outside the definition range [:#(type=Modelica.Blocks.Types.Extrapolation)]
Offsets of output signals
Output = offset for time < startTime [s]
Minimum abscissa value defined in table [s]
Maximum abscissa value defined in table [s]
Offsets of output signals
[:#(type=Integer)]
Next time event instant [s]
= 1, if table was successfully read from file
Number of outputs [:#(type=Integer)]
Connector of Real output signals
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Columns of table to be interpolated [:#(type=Integer)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
Extrapolation of data outside the definition range [:#(type=Modelica.Blocks.Types.Extrapolation)]
Offsets of output signals
Output = offset for time < startTime [s]
Minimum abscissa value defined in table [s]
Maximum abscissa value defined in table [s]
Offsets of output signals
[:#(type=Integer)]
Next time event instant [s]
= 1, if table was successfully read from file

